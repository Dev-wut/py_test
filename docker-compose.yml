services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_DB: priceza_deals
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend_net
    ports:
      - "5432:5432"

  backend_api:
    build: ./backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    environment:
      - ALLOWED_ORIGINS=http://localhost:3000,http://frontend:3000,http://81.17.100.56:3000
      - DATABASE_URL=postgresql://user:password@postgres/priceza_deals
    depends_on:
      - postgres
    networks:
      - backend_net

  scraper_runner:
    build: ./backend
    command: python scraper_runner.py
    volumes:
      - ./backend:/app
      - ./backend/data:/app/data # Ensure data is persistent and shared with backend_api
    depends_on:
      - backend_api # Scraper might need the API to be up, or at least the data directory
      - postgres
    restart: on-failure # Ensure scraper restarts if it crashes
    environment:
      - DATABASE_URL=postgresql://user:password@postgres/priceza_deals
    networks:
      - backend_net

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app # Mount for development, remove for production if not needed
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - backend_api # Frontend depends on backend API
    networks:
      - backend_net

networks:
  backend_net:

volumes:
  postgres_data:
